---
- name: "{{ item }} / create directories"
  file:
    state: directory
    path: "{{ dir }}"
  loop:
    - "{{ dockers_dir }}/{{ item }}"
  loop_control:
    loop_var: dir

- name: "{{ item }} / add settings.yaml"
  copy:
    dest: "{{ dockers_dir }}/{{ item }}/settings.yaml"
    content: |
      title: {{ inventory_hostname }}
      color: stone
      theme: dark

      layout:
        widgets:
          header: false
        services:
          header: false

      hideVersion: true
      showStats: false
      statusStyle: dot
      headerStyle: clean

- name: "{{ item }} / add docker.yaml"
  copy:
    dest: "{{ dockers_dir }}/{{ item }}/docker.yaml"
    content: |
      my-docker:
        socket: /var/run/docker.sock

- name: "{{ item }} / add widgets.yaml"
  copy:
    dest: "{{ dockers_dir }}/{{ item }}/widgets.yaml"
    content: |
      # - greeting:
      #     text_size: xl
      #     text: :~)

      # - search:
      #     provider: custom
      #     url: q=

- name: "{{ item }} / add services.yaml"
  copy:
    dest: "{{ dockers_dir }}/{{ item }}/services.yaml"
    content: |
      - widgets:
        - mainsail:
            icon: mainsail.svg
            href: http://mainsail.{{ inventory_hostname }}

- name: "{{ item }} / add bookmarks.yaml"
  copy:
    dest: "{{ dockers_dir }}/{{ item }}/bookmarks.yaml"
    content: ""

- name: "{{ item }} / add custom.css"
  copy:
    dest: "{{ dockers_dir }}/{{ item }}/custom.css"
    content: |
      .container {
        max-width: 1024px !important;
      }

      .service-block {
        flex-direction: column-reverse;
      }

      #page_container {
        background-color: rgb(17, 17, 17);
      }

      .service-card {
        border: 1px solid rgba(225, 225, 225, 0.12);
        background-color: rgb(28, 28, 28);
      }

      .service-tags {
        display: none !important;
      }

      #footer {
        display: none;
      }

      #information-widgets {
        display: none;
      }

- name: "{{ item }} / deploy"
  docker_container:
    state: started
    name: "{{ item }}"
    image: ghcr.io/gethomepage/homepage
    restart_policy: unless-stopped
    networks:
      - name: traefik
    user: "0"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ dockers_dir }}/{{ item }}:/config"
    labels:
      traefik.enable: "true"
      traefik.http.routers.homepage.tls: "true"
      traefik.http.routers.homepage.rule: Host(`{{ inventory_hostname }}`)
